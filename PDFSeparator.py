import os
import sys
import subprocess
from pathlib import Path

def check_ghostscript():
    """Ghostscript рдЗрдиреНрд╕реНрдЯреЙрд▓реНрдб рдЖрд╣реЗ рдХрд╛ рддреЗ рддрдкрд╛рд╕рд╛"""
    try:
        subprocess.run(["gswin64c" if os.name == 'nt' else "gs", "--version"], 
                      capture_output=True, check=True)
        return True
    except (subprocess.CalledProcessError, FileNotFoundError):
        return False

def install_ghostscript_instructions():
    """Ghostscript рдЗрдиреНрд╕реНрдЯреЙрд▓ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рд╕реВрдЪрдирд╛"""
    print("\n" + "="*60)
    print("Ghostscript рдЖрд╡рд╢реНрдпрдХ рдЖрд╣реЗ!")
    print("="*60)
    
    if os.name == 'nt':  # Windows
        print("Ghostscript рдЗрдиреНрд╕реНрдЯреЙрд▓ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА:")
        print("1. https://ghostscript.com/releases/gsdnld.html рд╡рд░реВрди рдбрд╛рдЙрдирд▓реЛрдб рдХрд░рд╛")
        print("2. Windows 64-bit рд╕рд╛рдареА gswin64c.exe рдЗрдиреНрд╕реНрдЯреЙрд▓ рдХрд░рд╛")
        print("3. System PATH рдордзреНрдпреЗ Ghostscript рдЬреЛрдбрд╛")
        print("4. рдкреНрд░реЛрдЧреНрд░рд╛рдо рдкреБрдиреНрд╣рд╛ рд░рди рдХрд░рд╛")
    else:  # Linux/Mac
        print("Linux рд╡рд░ рдЗрдиреНрд╕реНрдЯреЙрд▓ рдХрд░рд╛: sudo apt-get install ghostscript")
        print("Mac рд╡рд░ рдЗрдиреНрд╕реНрдЯреЙрд▓ рдХрд░рд╛: brew install ghostscript")
    
    print("\nрдЖрд╡рд╢реНрдпрдХ Ghostscript рдХрдорд╛рдВрдб:")
    print("Windows: gswin64c")
    print("Linux/Mac: gs")
    print("="*60)

def split_pdf_ghostscript(input_pdf, output_folder, page_prefix=None):
    """Ghostscript рд╡рд╛рдкрд░реВрди PDF рдЪреЗ рдкреЗрдЬреЗрд╕ рд╡реЗрдЧрд│реЗ рдХрд░рд╛"""
    
    if page_prefix is None:
        page_prefix = Path(input_pdf).stem
    
    # Ghostscript рдХрдорд╛рдВрдб рддрдпрд╛рд░ рдХрд░рд╛
    gs_command = [
        "gswin64c" if os.name == 'nt' else "gs",
        "-dNOPAUSE",
        "-dBATCH",
        "-dSAFER",
        "-sDEVICE=pdfwrite",
        f"-sOutputFile={output_folder}/{page_prefix}_page_%d.pdf",
        input_pdf
    ]
    
    try:
        print(f"PDF рд╕реНрдкреНрд▓рд┐рдЯ рдХрд░рдд рдЖрд╣реЗ: {Path(input_pdf).name}")
        result = subprocess.run(gs_command, capture_output=True, text=True, check=True)
        
        # рддрдпрд╛рд░ рдЭрд╛рд▓реЗрд▓реНрдпрд╛ рдлрд╛рдЗрд▓реНрд╕ рдореЛрдЬрд╛
        output_files = list(Path(output_folder).glob(f"{page_prefix}_page_*.pdf"))
        
        print(f"тЬЕ {len(output_files)} рдкреЗрдЬреЗрд╕ рд╡реЗрдЧрд│реЗ рдХрд░рдгреНрдпрд╛рдд рдпрд╢рд╕реНрд╡реА")
        return len(output_files)
        
    except subprocess.CalledProcessError as e:
        print(f"тЭМ рддреНрд░реБрдЯреА: Ghostscript рдЪрд╛рд▓рд╡рддрд╛рдирд╛ рдЕрдбрдЪрдг")
        print(f"Error: {e.stderr}")
        return 0

def get_pdf_page_count(pdf_path):
    """PDF рдордзреАрд▓ рдПрдХреВрдг рдкреЗрдЬреЗрд╕ рдореЛрдЬрд╛"""
    try:
        # pdfinfo рдХрд┐рдВрд╡рд╛ Ghostscript рджреНрд╡рд╛рд░реЗ рдкреЗрдЬ рдХрд╛рдКрдВрдЯ рдорд┐рд│рд╡рд╛
        gs_command = [
            "gswin64c" if os.name == 'nt' else "gs",
            "-q",
            "-dNODISPLAY",
            "-c",
            f"({pdf_path}) (r) file runpdfbegin pdfpagecount = quit"
        ]
        
        result = subprocess.run(gs_command, capture_output=True, text=True, check=True)
        return int(result.stdout.strip())
    except:
        # Alternative method
        try:
            gs_command = [
                "gswin64c" if os.name == 'nt' else "gs",
                "-dNODISPLAY",
                "-q",
                f"--permit-file-read={pdf_path}",
                "-c",
                f"({pdf_path}) (r) file runpdfbegin pdfpagecount == quit"
            ]
            result = subprocess.run(gs_command, capture_output=True, text=True, check=True)
            return int(result.stdout.strip())
        except:
            return 0

def process_folder(input_folder):
    """рдлреЛрд▓реНрдбрд░рдордзреАрд▓ рд╕рд░реНрд╡ PDF рдлрд╛рдЗрд▓реНрд╕ рдкреНрд░реЛрд╕реЗрд╕ рдХрд░рд╛"""
    
    # рдЖрдЙрдЯрдкреБрдЯ рдлреЛрд▓реНрдбрд░ рддрдпрд╛рд░ рдХрд░рд╛
    output_folder = Path(input_folder) / "split_pdfs"
    output_folder.mkdir(exist_ok=True)
    
    # рд╕рд░реНрд╡ PDF рдлрд╛рдЗрд▓реНрд╕ рд╢реЛрдзрд╛
    pdf_files = list(Path(input_folder).glob("*.pdf"))
    pdf_files.extend(Path(input_folder).glob("*.PDF"))
    
    if not pdf_files:
        print("тЭМ рдпрд╛ рдлреЛрд▓реНрдбрд░рдордзреНрдпреЗ рдХреЛрдгрддреАрд╣реА PDF рдлрд╛рдЗрд▓ рд╕рд╛рдкрдбрд▓реА рдирд╛рд╣реА!")
        return
    
    print(f"\nЁЯУБ {len(pdf_files)} PDF рдлрд╛рдЗрд▓реНрд╕ рд╕рд╛рдкрдбрд▓реНрдпрд╛:")
    
    total_pages = 0
    successful_files = 0
    
    for pdf_file in pdf_files:
        print(f"\nЁЯУД рдкреНрд░реЛрд╕реЗрд╕рд┐рдВрдЧ: {pdf_file.name}")
        
        # рдкреЗрдЬ рдХрд╛рдКрдВрдЯ рддрдкрд╛рд╕рд╛
        page_count = get_pdf_page_count(str(pdf_file))
        
        if page_count == 0:
            print(f"   тЭМ рдкреЗрдЬ рдХрд╛рдКрдВрдЯ рдорд┐рд│реВ рд╢рдХрд▓рд╛ рдирд╛рд╣реА рдХрд┐рдВрд╡рд╛ PDF рдЦрд░рд╛рдм рдЖрд╣реЗ")
            continue
        
        print(f"   ЁЯУК рдПрдХреВрдг рдкреЗрдЬреЗрд╕: {page_count}")
        
        # PDF рд╕реНрдкреНрд▓рд┐рдЯ рдХрд░рд╛
        success_count = split_pdf_ghostscript(str(pdf_file), str(output_folder))
        
        if success_count > 0:
            total_pages += success_count
            successful_files += 1
            print(f"   тЬЕ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ {success_count} рдкреЗрдЬреЗрд╕ рд╡реЗрдЧрд│реЗ рдХреЗрд▓реЗ")
        else:
            print(f"   тЭМ рд╕реНрдкреНрд▓рд┐рдЯ рдХрд░рдгреНрдпрд╛рдд рдЕрдпрд╢рд╕реНрд╡реА")
    
    # рд╕рд╛рд░рд╛рдВрд╢
    print(f"\n" + "="*60)
    print("ЁЯУК рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдкреВрд░реНрдг рдЭрд╛рд▓реА!")
    print("="*60)
    print(f"рдПрдХреВрдг PDF рдлрд╛рдЗрд▓реНрд╕: {len(pdf_files)}")
    print(f"рдпрд╢рд╕реНрд╡реА рдлрд╛рдЗрд▓реНрд╕: {successful_files}")
    print(f"рдПрдХреВрдг рд╡реЗрдЧрд│реЗ рдХреЗрд▓реЗрд▓реЗ рдкреЗрдЬреЗрд╕: {total_pages}")
    print(f"рдЖрдЙрдЯрдкреБрдЯ рдлреЛрд▓реНрдбрд░: {output_folder}")
    print("="*60)

def main():
    """рдореБрдЦреНрдп рдкреНрд░реЛрдЧреНрд░рд╛рдо"""
    print("=== PDF Page Splitter ===")
    print("рд╣рд╛ рдкреНрд░реЛрдЧреНрд░рд╛рдо PDF рдлрд╛рдЗрд▓рдЪреЗ рдкреНрд░рддреНрдпреЗрдХ рдкреЗрдЬ рд╡реЗрдЧрд│реНрдпрд╛ PDF рдлрд╛рдЗрд▓рдордзреНрдпреЗ рд╕реНрдкреНрд▓рд┐рдЯ рдХрд░рддреЗ")
    print("рдЖрд╡рд╢реНрдпрдХрддрд╛: Ghostscript рдЗрдиреНрд╕реНрдЯреЙрд▓реНрдб рдЕрд╕рдгреЗ рдЖрд╡рд╢реНрдпрдХ рдЖрд╣реЗ\n")
    
    # Ghostscript рддрдкрд╛рд╕рд╛
    if not check_ghostscript():
        install_ghostscript_instructions()
        input("\nPress Enter to exit...")
        return
    
    print("тЬЕ Ghostscript рд╕рд╛рдкрдбрд▓реЗ - рдкреНрд░реЛрдЧреНрд░рд╛рдо рд╕реБрд░реВ рдХрд░рдгреЗ рд╢рдХреНрдп рдЖрд╣реЗ")
    
    # рдЗрдирдкреБрдЯ рдлреЛрд▓реНрдбрд░ рд╡рд┐рдЪрд╛рд░рд╛
    while True:
        folder_path = input("\nрдХреГрдкрдпрд╛ PDF рдлрд╛рдЗрд▓реНрд╕ рдЕрд╕рд▓реЗрд▓реНрдпрд╛ рдлреЛрд▓реНрдбрд░рдЪрд╛ рдкрд╛рде рдЯрд╛рдЗрдк рдХрд░рд╛: ").strip()
        
        if not folder_path:
            print("тЭМ рдХреГрдкрдпрд╛ рд╡реИрдз рдлреЛрд▓реНрдбрд░ рдкрд╛рде рдЯрд╛рдЗрдк рдХрд░рд╛!")
            continue
            
        folder_path = Path(folder_path)
        
        if not folder_path.exists():
            print("тЭМ рд╣рд╛ рдлреЛрд▓реНрдбрд░ рдЕрд╕реНрддрд┐рддреНрд╡рд╛рдд рдирд╛рд╣реА! рдХреГрдкрдпрд╛ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛.")
            continue
            
        if not folder_path.is_dir():
            print("тЭМ рд╣рд╛ рдлреЛрд▓реНрдбрд░ рдирд╛рд╣реА! рдХреГрдкрдпрд╛ рдбрд┐рд░реЗрдХреНрдЯрд░реАрдЪрд╛ рдкрд╛рде рдЯрд╛рдЗрдк рдХрд░рд╛.")
            continue
            
        break
    
    # рдкреНрд░рдХреНрд░рд┐рдпрд╛ рд╕реБрд░реВ рдХрд░рд╛
    try:
        process_folder(folder_path)
    except Exception as e:
        print(f"\nтЭМ рдЕрдирдкреЗрдХреНрд╖рд┐рдд рддреНрд░реБрдЯреА: {str(e)}")
    
    input("\nPress Enter to exit...")

if __name__ == "__main__":
    main()
